#!/bin/bash



# README.md.generator - скрипт для автоматической генерации README.md в текущем каталоге.
# Использование: корневой каталог репозитария установить текущим, запустить скрипт.
# Внимание! Скрипт создан искючительно для обслуживания текущего репозитария!



# *************************************************************************************************************************************************************
# * Глобальные переменные (в том числе для работы функций общего назначения)
# *************************************************************************************************************************************************************



# *************************************************************************************************************************************************************
# * Функции общего назначения (можно использовать, как библиотечные)
# *************************************************************************************************************************************************************

# -----------------------------------------------------------------------------
# Функция press_any_key_to_continue
# ждёт от пользователя нажатия любой клавиши
#
# Аргументы: нет
# Возвращаемое значение: нет
# -----------------------------------------------------------------------------
function press_any_key_to_continue {
	
	echo "Press any key to continue..."

	# -s: Do not echo input coming from a terminal
	# -n 1: Read one character
	read -s -n 1
	echo -en "\n"

	return 0
} # press_any_key_to_continue

# -----------------------------------------------------------------------------
# Функция spinner
# бесконечно выводит вращающуюся палку на экран
#
# Аргументы: нет
# Возвращаемое: нет
# -----------------------------------------------------------------------------
function spinner {
	local i=1
	local -r symbols="/-\|"
	echo -n ' '
	while [[ true ]]; do
		printf "\b${symbols:i++%${#symbols}:1}"
		sleep .1
	done
} # spinner



# *************************************************************************************************************************************************************
# * Функции, характерные только для задач текущего скрипта
# *************************************************************************************************************************************************************

# -----------------------------------------------------------------------------
# Функция readme_generator
# генерирует в текущем каталоге ($PWD) README.md в stdout
#
# Аргументы: нет
# Возвращаемое значение: нет
# -----------------------------------------------------------------------------
function readme_generator {

    local i

    # Генерируем раздел Введение
    echo "# Введение"
    echo ""
	echo "Выражаю своё глубокое уважение к создателю оригинальной игры Алексею Леонидовичу Пажитнову, а также владельцам любых прав на бренд Tetris®. Данный код написан исключительно в развлекательных и не коммерческих целях для сугубо личного использования. Все права на Tetris® принадлежат только их законным владельцам.<br/>"
    echo "<br/>"
	echo "Посвящаю эту работу Александру Яковлеву (17.05.1976 — 08.07.2010), который будучи ещё школьником написал свой гениальный клон знаменитой игры — BackGround Tetris. Его программа btet.com[^1] работала под ОС MS-DOS на процессорах с архитектурой i286/i386. От множества других резидентных программ того времени, в том числе резидентных реализаций Тетриса, её отличал применённый автором подход: эмулировалась многозадачность, можно было играть в игру, пока на компьютере выполнялись другие программы. Для программ того времени это было совсем не характерно и выглядело очень инновационно. «Многозадачность» в MS-DOS настолько смущала людей того времени, что у меня даже состоялся спор со своим другом на тему того, использует ли btet.com защищённый режим процессора или нет (ответ - «не использует»).<br/>" 
    echo "<br/>"
	echo "Также посвящаю эту работу Александру Липатову (29.04.1976 — 22.07.2023), с которым мы (я и Манушкин Григорий) в далёком 1994 году, полные надежд, мечтаний и энтузиазма, готовились к конкурсу «Softool\'ийские игры»[^2] на выставке SofTool\'94. Это время было одним из лучших в моей жизни! К сожалению, работы Александра у меня нет. Знаю только, что Александр своё задание выполнил, и только какое-то стечение обстоятельств помешало нам поехать в Москву и принять участие в конкурсе.<br/>"
	echo "|![Александр Яковлев (слева) и Александр Липатов (справа)](images/yakovlev_alex%20(left)%2C%20lipatov_alex%20(right)%2C%20~1993%20year.png)|![Александр Липатов](images/lipatov_alex%2C%20~1994%20year.png)        |"
	echo "|------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------------------|"
	echo "| Александр Яковлев (слева) и Александр Липатов (справа), предположительно на выпускном вечере в Лицее №14 г. Тамбов (1993 год)            | Александр Липатов, предположительно 1994 год - таким я его и запомнил |"
	echo "[^1]: [Ссылка](/retro/btet) на мой экземпляр BackGround Tetris, который храню уже более 30 лет."
    echo "[^2]: Моя работа к конкурсу доступна по [ссылке](/retro/SofTool%6094)."
    echo ""

    # Генерируем раздел Описание
    echo "# Описание"
    echo ""
    for i in $(git ls-files sources/*.bash); do
        sed -nE '2 s/^(abs.*\.bash)(\ -\ .*)$/**\1**\2<br\/>\n/p' <(./"$i" --help)
    done
    echo ""

    # Генерируем раздел Установка
    cat <<EOF
# Установка

Никакая специальная установка не требуется.

1. **sources/abstet18+.bash** разместить в любом доступном для пользователя каталоге<br/>
0. **sources/backgrounds** - каталог с фоновыми ascii изображениями - расположить в каталоге со скриптом abstet18+.bash. При помощи ключей abstet18+.bash можно задать другое расположение каталога. Можно не размещать этот каталог: в этом случае фоновых изображений на уровнях не будет, ошибок скрипт выдавать также не будет.
0. **sources/abstet18+-completion** - файл автоматических дополнений для abstet18+.bash - разместить в /etc/bash_completion.d/ (работает в Fedora 40)<br/>

EOF

    # Генерируем раздел Использование
    echo "# Использование"
    echo ""
    for i in $(git ls-files sources/*.bash); do
        echo "## $i"
        echo '```'
        tail -n +6 <(./"$i" --help)
        echo -e '```\n'
    done
    echo ""

    # Генерируем раздел Управление в игре
    cat <<EOF
# Управление в игре

|Управление игрой|   |
|----------------|---|
|новая игра      | n |
|выйти из игры   | q |
|пауза           | p |

|Управление фигурой              |          |
|--------------------------------|----------|
|перемещение влево               | ←        |
|перемещение вправо              | →        |
|вращение по часовой стрелке     | ↑        |
|вращение против часовой стрелки | Ctrl + ↑ |
|сброс soft                      | ↓        |
|сброс hard                      | Space    |

|Управление уровнем|   |
|------------------|---|
|увеличить         | + |
|уменьшить         | - |

|Прочее                                      |   |
|--------------------------------------------|---|
|перерисовать экран                          | r |
|включить или выключить подсказку по клавишам| h |

|Перемещение игрового поля в окне терминала|         |
|------------------------------------------|---------|
|влево                                     | Alt + ← |
|вправо                                    | Alt + → |
|вверх                                     | Alt + ↑ |
|вниз                                      | Alt + ↓ |

|Выравнивание игрового поля в окне терминала|        |
|-------------------------------------------|--------|
|по левой границе окна                      | Home   |
|по правой границе окна                     | End    |
|по верхней границе окна                    | PgUp   |
|по нижней границе окна                     | PgDown |

EOF

    # Генерируем раздел Статистика
    echo "# Статистика"
    echo ""
    for i in $(git ls-files sources/*.bash); do
        echo "## $i"
        echo '```'
		echo "  строк кода -------------- $(grep -E --line-regexp --invert-match '[[:blank:]]*#.*?|[[:blank:]]*' ./${i} | wc -l)"
		echo "  объём кода -------------- $(grep -E --line-regexp --invert-match '[[:blank:]]*#.*?|[[:blank:]]*' ./${i} | wc -c) символов"
		echo "  контрольная сумма MD5 --- $(md5sum ./${i} | awk '{ print $1 }')"
        echo -e '```\n'
    done
    echo ""

    # Генерируем статусную линию
    cat <<EOF
<br/>
<br/>
<br/>

---
© 2024 Sergey Vasiliev<br/>
- <a href="mailto:vasiliev.s@komdiv.org" target="_blank">vasiliev.s@komdiv.org</a><br/>
- <a href="mailto:abs.tambov@gmail.com" target="_blank">abs.tambov@gmail.com</a><br/>
EOF

	return 0
} # readme_generator

# -----------------------------------------------------------------------------
# Функция main
# главная функция скрипта
#
# Аргументы: нет
# Возвращаемое значение: нет
# -----------------------------------------------------------------------------
function main {

	local spinner_pid		# Содержит pid выполняемой в фоне функции

	# -----------------------------------------------------------------------------
	# Функция ctrl_c
	# вызывается при нажатии Ctrl+C
	#
	# Аргументы: нет
	# Возвращаемое значение: нет
	# -----------------------------------------------------------------------------
	function ctrl_c {
		
		# Останавливаем спиннер и чистим экран после него и press_any_key_to_continue
		kill $spinner_pid && wait $spinner_pid 2>/dev/null
		tput cr 	# carriage_return (cr/) cr  carriage return (P*) (P*)
		tput cuu1	# cursor_up (cuu1/up)  up one line
		tput el		# clr_eol (el/ce) clear to end of line (P)

		echo ""
		echo "Отменено."

		exit 0
	} # ctrl_c

	# -----------------------------------------------------------------------------

	if [[ -w README.md ]]; then
		echo -n "README.md существует в ${PWD} и будет переписан! "
	else
		echo -n "Будет сгенерирован новый README.md в ${PWD}. "
	fi
	echo "Или нажмите Ctrl+C для отмены."

	# Запускаем спиннер
	spinner &
	spinner_pid=$!

	# Устанавливаем функцию-обработчик Ctrl+C (сигнал SIGINT)
	trap ctrl_c SIGINT

	# ...
	press_any_key_to_continue
	readme_generator >README.md

	# Останавливаем спиннер и чистим экран после него и press_any_key_to_continue
	kill $spinner_pid && wait $spinner_pid 2>/dev/null
	tput cr 	# carriage_return (cr/) cr  carriage return (P*) (P*)
	tput cuu1	# cursor_up (cuu1/up)  up one line
	tput cuu1	# cursor_up (cuu1/up)  up one line
	tput el		# clr_eol (el/ce) clear to end of line (P)

	echo ""
	echo "Готово."

    return 0
} # main



# *************************************************************************************************************************************************************
# * Сам скрипт 😊
# *************************************************************************************************************************************************************

main "$@"
exit $?

# *************************************************************************************************************************************************************

